package standard;

import java.util.ArrayList;
import java.util.Arrays;

import data.Data;

public class Main {
	
	public static void main(String[] args) {
		//Genero l'arrray di stringhe alfanumeriche iniziale
		ArrayList init=Data.getRandomString(20,500000);
		
		//Genero l'arrray di stringhe alfanumeriche per l'operazione di lookup
		ArrayList lookupList=Data.getRandomString(20,500000);
		//parametro in input al bloom filter che indica la percentuale di fp ammissibili
		double fp=0.001;
		
		//Inizializzazione del BloomFilter
		//BloomFilter bl=new BloomFilter(fp,init,init.length*2);
		BloomFilter bl=new BloomFilter(fp,init.size());
		bl.getInfo();
		//System.out.println("FP Probability: "+bl.getProbabilityFP());
		System.out.println();

		//Add
	/*	System.out.println("Add");
		String addString="benvenutoal2016ABCD";
		boolean lkS=bl.lookup(addString);
		System.out.println("Lookup \""+addString+"\": "+lkS);
		long addStart=System.currentTimeMillis();
		bl.add("benvenutoal2016ABCD");
		long addEnd=System.currentTimeMillis();
		long lkStart=System.currentTimeMillis();
		boolean lkE=bl.lookup(addString);
		long lkEnd=System.currentTimeMillis();

		System.out.println("Lookup dopo l'operazione di add \""+addString+"\": "+lkE);
		
		
		Data.printStat("add()",addStart, addEnd, 1);
		Data.printStat("lookup()",lkStart, lkEnd, 1);


		System.out.println();
		
		
		bl.getInfo();
		
		// Lookup 
		System.out.println("Lookup degli elementi di un array di pari dimensione");
		System.out.println("N. elementi nell'insieme del lookup: "+lookupList.length);
		int nTrovati=0;
		int notTrovati=0;
		long tStart=System.currentTimeMillis();
		for(int i=0;i<lookupList.length;i++){
			if(bl.lookup(lookupList[i])==true){
				nTrovati++;
			}else{
				notTrovati++;
			}
		}
		long tEnd=System.currentTimeMillis();
		System.out.println("N elementi trovati sul lookup degli elementi dell'ultimo array: "+nTrovati);
		Data.printStat("lookup()",tStart, tEnd, lookupList.length);

		System.out.println("***************************************************************");
		
		*/
		
		System.out.println("Add di tutti gli elmenti dell'insieme del lookup precedente");

		long tStartAdd=System.currentTimeMillis();
		for(Object l: lookupList){
			bl.add(l.toString());
		}
		long tEndAdd=System.currentTimeMillis();
		Data.printStat("add()",tStartAdd, tEndAdd, lookupList.size());


		System.out.println();
		bl.getInfo();
		
		// Lookup 
		System.out.println("(2) Lookup degli elementi di un array di pari dimensione");
		System.out.println("N. elementi nell'insieme del lookup: "+lookupList.size());
		int nTrovati=0;
		int notTrovati=0;
		long tStart=System.currentTimeMillis();
		for(Object l : lookupList){
			if(bl.lookup(l.toString())==true){
				nTrovati++;
			}else{
				notTrovati++;
			}
		}
		long tEnd=System.currentTimeMillis();
		System.out.println("N elementi trovati sul lookup degli elementi dell'ultimo array: "+nTrovati);
		System.out.println("N elementi non trovati sul lookup degli elementi dell'ultimo array: "+notTrovati);
		
		Data.printStat("lookup()",tStart, tEnd, lookupList.size());
		tStart=System.currentTimeMillis();
		boolean b=bl.lookupAll(lookupList);
		tEnd=System.currentTimeMillis();
		Data.printStat("lookupAll()",tStart, tEnd, lookupList.size());

	}
	
	

}


